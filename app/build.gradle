apply plugin: 'com.android.application'

android {
    compileSdkVersion 33
    buildToolsVersion "33.0.0"

    defaultConfig {
        applicationId "io.datamachines.faiss"
        minSdkVersion 26
        targetSdkVersion 26
        versionCode 2
        versionName "2.0"
        //multiDexEnabled true
        //multiDexKeepFile file('multidex.txt')
        ndk {
//            moduleName "MyLibrary" //生成的so名字
//            ldLibs "log", "z", "m" //添加依赖库文件，如果有log打印等
            abiFilters "arm64-v8a"  //, "armeabi-v7a", "x86" //输出指定cpu体系结构下的so库。
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/source/CMakeLists.txt"
        }
    }
    android {
        lintOptions {
            abortOnError false
        }
    }

}
repositories {
    flatDir {
        dirs 'libs'
    }
}

task makejni(type: Copy) {


}

makejni.dependsOn(build)


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
